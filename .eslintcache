[{"C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\index.tsx":"1","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\App.tsx":"2","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Context.ts":"3","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\Todos.tsx":"4","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\Footer.tsx":"5","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\Todo.tsx":"6"},{"size":435,"mtime":1673838665568,"results":"7","hashOfConfig":"8"},{"size":958,"mtime":1674021323166,"results":"9","hashOfConfig":"8"},{"size":2976,"mtime":1673840388078,"results":"10","hashOfConfig":"8"},{"size":568,"mtime":1673838665567,"results":"11","hashOfConfig":"8"},{"size":1018,"mtime":1673838665565,"results":"12","hashOfConfig":"8"},{"size":3668,"mtime":1673840735048,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hq4gsi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\index.tsx",[],["33","34"],"C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\App.tsx",["35","36"],"import { Box, Container, Grid } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Context, initialState, reducer } from \"../Context\";\r\nimport Footer from \"./Footer\";\r\nimport Todos from \"./Todos\";\r\nimport \"./App.css\";\r\nexport interface AppProps {}\r\n\r\nconst App: React.FC<AppProps> = () => {\r\n   const [state, dispatch] = React.useReducer(reducer, initialState);\r\n   return (\r\n      <Context.Provider value={[state, dispatch]}>\r\n         <Grid container justify=\"center\">\r\n            <Box flexDirection=\"column\" display=\"flex\" width=\"50%\">\r\n               <Box alignSelf=\"center\">\r\n                  <h1>Todos app</h1>\r\n               </Box>\r\n               <Box>\r\n                  <Todos></Todos>\r\n               </Box>\r\n               <Box>\r\n                  <Footer></Footer>\r\n               </Box>\r\n            </Box>\r\n         </Grid>\r\n      </Context.Provider>\r\n   );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Context.ts",["37","38","39","40","41","42"],"import { uniqueId } from \"cypress/types/lodash\";\r\nimport { createContext, Dispatch, useContext, useReducer } from \"react\";\r\nimport Todo from \"./Components/Todo\";\r\n\r\ntype TodoId = string;\r\n\r\nexport interface ITodo {\r\n   text: string;\r\n   completed: boolean;\r\n   active: boolean;\r\n   id: TodoId;\r\n}\r\ninterface IState {\r\n   todos: ITodo[];\r\n   title: string;\r\n}\r\n\r\nexport const initialState: IState = {\r\n   todos: [],\r\n   title: \"Todo app\",\r\n};\r\n\r\ntype ActionType = {\r\n   \"delete-todo\": TodoId;\r\n   \"add-todo\": string;\r\n   \"start-edit-todo\": TodoId;\r\n   \"complete-todo\": TodoId;\r\n   \"end-edit-todo\": { todoId: string; text: string };\r\n};\r\ntype ActionNames = keyof ActionType;\r\nconst functionsObject: {\r\n   [k in ActionNames]: (state: IState, data: ActionType[k]) => IState;\r\n} = {\r\n   \"add-todo\": (state, data) => {\r\n      return {\r\n         ...state,\r\n         todos: [\r\n            ...state.todos,\r\n            {\r\n               active: false,\r\n               completed: false,\r\n               id: Math.random().toString(),\r\n               text: data,\r\n            },\r\n         ],\r\n      };\r\n   },\r\n   \"complete-todo\": (state, data) => {\r\n      const { todos } = state;\r\n      const index = todos.findIndex((todo) => todo.id === data) as number;\r\n      const newTodo = { ...todos[index], completed: true };\r\n      return {\r\n         ...state,\r\n         todos: [...todos.slice(0, index), newTodo, ...todos.slice(index + 1)],\r\n      };\r\n   },\r\n   \"delete-todo\": (state, data) => ({\r\n      ...state,\r\n      todos: state.todos.filter((todo) => todo.id !== data),\r\n   }),\r\n   \"start-edit-todo\": (state, data) => {\r\n      const { todos } = state;\r\n      const index = todos.findIndex((todo) => todo.id === data) as number;\r\n      const newTodo = { ...todos[index], active: true };\r\n      return {\r\n         ...state,\r\n         todos: [...todos.slice(0, index), newTodo, ...todos.slice(index + 1)],\r\n      };\r\n   },\r\n   \"end-edit-todo\": (state, data) => {\r\n      const { todos } = state;\r\n      const index = todos.findIndex(\r\n         (todo) => todo.id === data.todoId\r\n      ) as number;\r\n      const newTodo: ITodo = {\r\n         ...todos[index],\r\n         active: false,\r\n         text: data.text,\r\n      };\r\n      return {\r\n         ...state,\r\n         todos: [...todos.slice(0, index), newTodo, ...todos.slice(index + 1)],\r\n      };\r\n   },\r\n};\r\n\r\nexport const reducer = (state: IState, action: Partial<ActionType>): IState => {\r\n   let tempState: IState = state;\r\n   Object.entries(action).forEach(([key, data]) => {\r\n      tempState = (\r\n         functionsObject[key as ActionNames] as (\r\n            state: IState,\r\n            data: Partial<ActionType>[ActionNames]\r\n         ) => IState\r\n      )(tempState, data);\r\n   });\r\n   for (let key in action) {\r\n   }\r\n   return tempState;\r\n};\r\n\r\ntype IContext = [IState, React.Dispatch<Partial<ActionType>>];\r\nexport const initialContext: IContext = [initialState, () => {}];\r\n\r\nexport const Context = createContext(initialContext);\r\n","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\Todos.tsx",["43","44","45","46"],"import { List, Grid, Box } from \"@material-ui/core\";\r\nimport { sizing } from \"@material-ui/system\";\r\nimport * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport interface TodosProps {}\r\n\r\nconst Todos: React.FC<TodosProps> = () => {\r\n   const [{ todos }] = React.useContext(Context);\r\n   return (\r\n      <List style={{ width: \"100%\" }} id=\"todos\">\r\n         {todos.map((todo) => (\r\n            <Todo {...todo}></Todo>\r\n         ))}\r\n      </List>\r\n   );\r\n};\r\n\r\nexport default Todos;\r\n","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\Footer.tsx",["47","48","49","50","51","52","53","54"],"import {\r\n   Box,\r\n   Input,\r\n   InputBase,\r\n   makeStyles,\r\n   TextField,\r\n   Typography,\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { Component, ChangeEvent, KeyboardEvent } from \"react\";\r\nimport { Context } from \"../Context\";\r\n\r\nconst styles = makeStyles({\r\n   resize: {\r\n      fontSize: \"1.5rem\",\r\n   },\r\n});\r\n\r\nconst Footer: React.FC = () => {\r\n   const [state, dispatch] = React.useContext(Context);\r\n   const onInputKeyDown = (e: KeyboardEvent) => {\r\n      console.log(e.key);\r\n      const input = e.target as HTMLInputElement;\r\n      const value = input.value;\r\n      if (e.key === \"Enter\") {\r\n         if (value !== \"\") {\r\n            dispatch({ \"add-todo\": value });\r\n            input.value = \"\";\r\n         }\r\n      }\r\n   };\r\n   return (\r\n      <TextField\r\n         InputProps={{ style: { fontSize: \"1.3rem\" }, id: \"add-input\" }}\r\n         style={{ width: \"100%\", paddingTop: \"1rem\" }}\r\n         onKeyUp={onInputKeyDown}\r\n      ></TextField>\r\n   );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Maheer\\Documents\\codes\\todo\\src\\Components\\Todo.tsx",["55","56","57","58","59","60","61","62"],"import {\r\n   Box,\r\n   Icon,\r\n   IconButton,\r\n   Input,\r\n   ListItem,\r\n   makeStyles,\r\n   ListItemText,\r\n   TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n   Check,\r\n   CheckCircle,\r\n   Delete,\r\n   Done,\r\n   DoneAllRounded,\r\n   Edit,\r\n   Save,\r\n} from \"@material-ui/icons\";\r\nimport * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Context, ITodo } from \"../Context\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n   root: {\r\n      padding: theme.spacing(1),\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n         backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n         backgroundColor: theme.palette.primary.main,\r\n      },\r\n   },\r\n}));\r\n\r\nconst Todo: React.FC<ITodo> = ({ active, completed, text, id }) => {\r\n   const [state, dispatch] = React.useContext(Context);\r\n   const [tempText, setTempText] = React.useState(text);\r\n   const renderTodoText = () => {\r\n      if (active) {\r\n         return (\r\n            <TextField\r\n               className=\"edit-input\"\r\n               value={tempText}\r\n               onChange={onEditInputChange}\r\n            />\r\n         );\r\n      } else return <ListItemText primary={text}></ListItemText>;\r\n   };\r\n   const onEditInputChange = (e: React.ChangeEvent) => {\r\n      setTempText((e.target as HTMLInputElement).value);\r\n   };\r\n   let classes = [];\r\n   if (active) {\r\n      classes.push(\"active\");\r\n   }\r\n   if (completed) {\r\n      classes.push(\"completed\");\r\n   }\r\n   return (\r\n      <Box\r\n         padding={0}\r\n         className={classes.join(\" \")}\r\n         borderBottom=\"0.1px solid gray\"\r\n      >\r\n         <ListItem button>\r\n            <Box\r\n               display=\"flex\"\r\n               alignItems=\"center\"\r\n               width=\"100%\"\r\n               flexWrap=\"wrap\"\r\n            >\r\n               <Box marginRight=\"auto\">{renderTodoText()}</Box>\r\n               <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"row\"\r\n                  justifyContent=\"center\"\r\n                  flexWrap=\"wrap\"\r\n               >\r\n                  {!completed && (\r\n                     <IconButton\r\n                        className=\"check\"\r\n                        onClick={() => dispatch({ \"complete-todo\": id })}\r\n                     >\r\n                        <CheckCircle\r\n                           style={{ color: \"greenyellow\" }}\r\n                        ></CheckCircle>\r\n                     </IconButton>\r\n                  )}\r\n                  {active ? (\r\n                     <IconButton\r\n                        onClick={() =>\r\n                           dispatch({\r\n                              \"end-edit-todo\": { text: tempText, todoId: id },\r\n                           })\r\n                        }\r\n                        color=\"primary\"\r\n                        className=\"save-edit-btn\"\r\n                     >\r\n                        <Save />\r\n                     </IconButton>\r\n                  ) : (\r\n                     <IconButton\r\n                        onClick={() => dispatch({ \"start-edit-todo\": id })}\r\n                        color=\"primary\"\r\n                        className=\"edit-btn\"\r\n                     >\r\n                        <Edit />\r\n                     </IconButton>\r\n                  )}\r\n                  <IconButton\r\n                     onClick={() => dispatch({ \"delete-todo\": id })}\r\n                     color=\"secondary\"\r\n                     className=\"delete-btn\"\r\n                  >\r\n                     <Delete />\r\n                  </IconButton>\r\n               </Box>\r\n            </Box>\r\n         </ListItem>\r\n      </Box>\r\n   );\r\n};\r\n\r\nexport default Todo;\r\n",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":15,"nodeType":"71","messageId":"72","endLine":1,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":19},{"ruleId":"69","severity":1,"message":"74","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":18},{"ruleId":"69","severity":1,"message":"75","line":2,"column":25,"nodeType":"71","messageId":"72","endLine":2,"endColumn":33},{"ruleId":"69","severity":1,"message":"76","line":2,"column":35,"nodeType":"71","messageId":"72","endLine":2,"endColumn":45},{"ruleId":"69","severity":1,"message":"77","line":2,"column":47,"nodeType":"71","messageId":"72","endLine":2,"endColumn":57},{"ruleId":"69","severity":1,"message":"78","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":12},{"ruleId":"69","severity":1,"message":"79","line":97,"column":13,"nodeType":"71","messageId":"72","endLine":97,"endColumn":16},{"ruleId":"69","severity":1,"message":"80","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":20},{"ruleId":"69","severity":1,"message":"81","line":1,"column":22,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"82","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":19},{"ruleId":"69","severity":1,"message":"81","line":2,"column":4,"nodeType":"71","messageId":"72","endLine":2,"endColumn":7},{"ruleId":"69","severity":1,"message":"83","line":3,"column":4,"nodeType":"71","messageId":"72","endLine":3,"endColumn":9},{"ruleId":"69","severity":1,"message":"84","line":4,"column":4,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"85","line":7,"column":4,"nodeType":"71","messageId":"72","endLine":7,"endColumn":14},{"ruleId":"69","severity":1,"message":"73","line":10,"column":10,"nodeType":"71","messageId":"72","endLine":10,"endColumn":19},{"ruleId":"69","severity":1,"message":"86","line":10,"column":21,"nodeType":"71","messageId":"72","endLine":10,"endColumn":32},{"ruleId":"69","severity":1,"message":"87","line":13,"column":7,"nodeType":"71","messageId":"72","endLine":13,"endColumn":13},{"ruleId":"69","severity":1,"message":"88","line":20,"column":11,"nodeType":"71","messageId":"72","endLine":20,"endColumn":16},{"ruleId":"69","severity":1,"message":"89","line":3,"column":4,"nodeType":"71","messageId":"72","endLine":3,"endColumn":8},{"ruleId":"69","severity":1,"message":"83","line":5,"column":4,"nodeType":"71","messageId":"72","endLine":5,"endColumn":9},{"ruleId":"69","severity":1,"message":"90","line":12,"column":4,"nodeType":"71","messageId":"72","endLine":12,"endColumn":9},{"ruleId":"69","severity":1,"message":"91","line":15,"column":4,"nodeType":"71","messageId":"72","endLine":15,"endColumn":8},{"ruleId":"69","severity":1,"message":"92","line":16,"column":4,"nodeType":"71","messageId":"72","endLine":16,"endColumn":18},{"ruleId":"69","severity":1,"message":"73","line":21,"column":10,"nodeType":"71","messageId":"72","endLine":21,"endColumn":19},{"ruleId":"69","severity":1,"message":"93","line":24,"column":7,"nodeType":"71","messageId":"72","endLine":24,"endColumn":16},{"ruleId":"69","severity":1,"message":"88","line":37,"column":11,"nodeType":"71","messageId":"72","endLine":37,"endColumn":16},{"ruleId":"65","replacedBy":"94"},{"ruleId":"67","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'uniqueId' is defined but never used.","'Dispatch' is defined but never used.","'useContext' is defined but never used.","'useReducer' is defined but never used.","'Todo' is defined but never used.","'key' is assigned a value but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'sizing' is defined but never used.","'Input' is defined but never used.","'InputBase' is defined but never used.","'Typography' is defined but never used.","'ChangeEvent' is defined but never used.","'styles' is assigned a value but never used.","'state' is assigned a value but never used.","'Icon' is defined but never used.","'Check' is defined but never used.","'Done' is defined but never used.","'DoneAllRounded' is defined but never used.","'useStyles' is assigned a value but never used.",["96"],["97"],"no-global-assign","no-unsafe-negation"]